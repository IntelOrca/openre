# struct      name                    size
# base        name
# declare     name                    size                    address

typedef     ItemType                u8

struct      ItemMixDefinition
declare     object_item_id          u8
declare     mix_type                u8
declare     result_item             u8
declare     mixed_pix_no            u8

struct      ItemTypeDefinition
declare     max                     u8
declare     var_01                  u8
declare     var_02                  u8
declare     var_03                  u8
declare     mix                     ItemMixDefinition*

struct      InventoryDef
declare     Type                    ItemType
declare     Quantity                u8
declare     Part                    u8

struct      InventorySlot
base        InventoryDef
declare     unk_04                  u8

struct      ItemboxItem
declare     Type                    u8
declare     Quantity                u8
declare     Part                    u8
declare     var_04                  u8

struct      Vec16
declare     x                       s16
declare     y                       s16
declare     z                       s16

struct      Vec16p
base        Vec16
declare     pad_6                   s16

struct      Vec16d
base        Vec16
declare     d                       s16

struct      Vec32
declare     x                       s32
declare     y                       s32
declare     z                       s32

struct      Vec32p
base        Vec32
declare     pad_0C                  s32

struct      Vec32d
base        Vec32
declare     d                       s32

struct      Mat16
declare     m                       s16[9]
declare     field_12                s16
declare     pos                     Vec32

struct      VCut
declare     be_flg                  u8
declare     nFloor                  u8
declare     fCut                    u8
declare     tCut                    u8
declare     xz                      s16[8]

struct      TmdEntry
struct      Edd
struct      Emr

struct      PartsW
declare     Be_flg                  u32
declare     Attribute               u8
declare     field_5                 u8
declare     field_6                 u8
declare     field_7                 u8
declare     pTmd                    TmdEntry*
declare     pPacket                 u32
declare     pTmd2                   TmdEntry*
declare     pPacket2                u32
declare     M                       u16[9]
declare     field_2A                u16
declare     pos                     Vec32
declare     old_x                   Vec16
declare     old_x2                  Vec16
declare     dummy00                 u16
declare     dm00                    u16
declare     workm                   Mat16
declare     cdir_x                  u16
declare     cdir_y                  u16
declare     cdir_z                  u16
declare     dummy01                 u16
declare     poly_rgb                u32
declare     super                   u32
declare     parts_no                u8
declare     timer1                  u8
declare     timer2                  u8
declare     sabun_flg               u8
declare     rot_x                   u16
declare     rot_y                   u16
declare     rot_z                   u16
declare     sabun_cnt0              u16
declare     timer0                  u16
declare     timer3                  u16
declare     psa_dat_head            u32*
declare     size_x                  u16
declare     size_y                  u16
declare     size_z                  u16
declare     dummy03                 u16
declare     oya_parts               PartsW*
declare     free                    u16[10]

struct      Kage
declare     var_04                  u16         0x04
declare     var_06                  u16         0x06
declare     var_1C                  u32         0x1C
declare     var_44                  u32         0x44

struct      At
declare     pos                     Vec32
declare     w                       s16
declare     d                       s16
declare     ofs                     Vec16
declare     at_w                    s16
declare     at_d                    s16
declare     at_h                    s16
declare     atw_x                   s16
declare     atw_z                   s16

struct      Entity
declare     be_flg                  s32
declare     routine_0               u8
declare     routine_1               u8
declare     routine_2               u8
declare     routine_3               u8
declare     id                      u8
declare     sc_id                   u8
declare     at_obj_no               u8
declare     at_sce_no               u8
declare     work_no                 u8
declare     at_em_no                u8
declare     at_em_flg               s16
declare     attribute               s32
declare     pTmd                    TmdEntry*
declare     pPacket                 s32
declare     pTmd2                   TmdEntry*
declare     pPacket2                s32
declare     m                       Mat16
declare     old_pos                 Vec16
declare     old_pos_2               Vec16
declare     dummy00                 s32
declare     workm                   Mat16
declare     cdir                    Vec16p
declare     poly_rgb                s32
declare     pSuper                  Mat16*
declare     atd                     At[4]
declare     tpage                   u8
declare     clut                    u8
declare     nFloor                  u8
declare     parts_num               u8
declare     pKan_t_ptr              Emr*
declare     water                   s16
declare     type                    u16

struct      ActorEntity
base        Entity
declare     Sca_info                s32
declare     field_114               s32
declare     sca_old_x               s16
declare     sca_old_z               s16
declare     field_11C               s32
declare     field_120               s32
declare     field_124               s32
declare     field_128               s32
declare     field_12C               s32
declare     field_130               s32
declare     field_134               s32
declare     field_138               s32
declare     field_13C               s32
declare     field_140               s32
declare     spd                     Vec16
declare     in_screen               u8
declare     model_Tex_type          u8
declare     move_no                 u8
declare     move_cnt                u8
declare     hokan_flg               u8
declare     mplay_flg               u8
declare     root_ck_cnt             u8
declare     d_life_u                u8
declare     d_life_c                u8
declare     d_life_d                u8
declare     status_flg              s16
declare     life                    s16
declare     timer0                  s16
declare     timer1                  s16
declare     f_pos                   Vec16
declare     max_life                s16
declare     base_pos                Vec16
declare     timer2                  u8
declare     timer3                  u8
declare     pKage_work              Kage*
declare     field_170               s32
declare     field_174               s32
declare     pNow_seq                u32*
declare     pSeq_t_ptr              Edd*
declare     pSub0_kan_t_ptr         Emr*
declare     pSub0_seq_t_ptr         Edd*
declare     pSub1_kan_t_ptr         Emr*
declare     pSub1_seq_t_ptr         Edd*
declare     field_190               s32
declare     field_194               s32
declare     pSin_parts_ptr          PartsW*
declare     pParts_tmd              s32
declare     pParts_packet           s32
declare     pM_uint8_t_ptr          s32
declare     pM_option_tmd           s32
declare     pM_option_packet        s32
declare     pM_Kage_work            s32
declare     pEnemy_ptr              Entity*
declare     pEnemy_neck             s32
declare     pSa_dat                 void*
declare     neck_flg                u8
declare     neck_no                 u8
declare     ground                  s16
declare     dest_x                  s16
declare     dest_z                  s16
declare     down_cnt                s16
declare     at_hit_flg              u8
declare     field_1CB               u8
declare     sce_flg                 s16
declare     em_set_flg              u8
declare     model_type              u8
declare     damage_flg              u16
declare     damage_no               u8
declare     damage_cnt              u8
declare     sce_free0               u16
declare     sce_free1               u16
declare     sce_free2               u16
declare     sce_free3               u16
declare     spl_flg                 u16
declare     parts0_pos_y            u16
declare     pT_xz                   u32
declare     pOn_om                  u32
declare     nOba                    s32
declare     attw_timer              u8
declare     attw_seq_no             u8
declare     eff_at_r                u16
declare     l_pl                    s32
declare     l_spl                   s32
declare     dir_spl                 s16
declare     sound_bank              u8
declare     area_no                 u8
declare     tmp_routine             s32
declare     pDamage_work            s32
declare     pTbefore_func           void*
declare     pTafter_func            void*
declare     spd_base                Vec16
declare     kage_ofs                s16
declare     poison_timer            s16
declare     pison_down              u8
declare     field_217               u8

struct      EnemyEntity
base        ActorEntity
declare     var_218                 u8          0x218
declare     var_219                 u8          0x219
declare     var_21C                 u8          0x21C
declare     var_21D                 u8          0x21D
declare     var_21E                 u8          0x21E
declare     var_21F                 u8          0x21F
declare     var_220                 u8          0x220
declare     var_221                 u8          0x221
declare     var_222                 u8          0x222
declare     var_223                 u8          0x223
declare     var_227                 u8          0x227
declare     var_22C                 u8          0x22C
declare     var_22D                 u8          0x22D
declare     var_22E                 u8          0x22E
declare     var_230                 u8          0x230
declare     var_231                 u8          0x231
declare     var_232                 u8          0x232
declare     var_233                 u8          0x233
declare     var_234                 u8          0x234
declare     var_235                 u8          0x235
declare     var_236                 u8          0x236
declare     var_23A                 s8          0x23A
declare     var_23C                 u8          0x23C
declare     var_23D                 u8          0x23D
declare     var_23F                 u8          0x23F
declare     pad_247                 u8          0x247

struct      PlayerEntity
base        ActorEntity

struct      ObjectEntity
base        Entity
declare     sca_info                u32
declare     sca_hit_data            u32
declare     sca_old_x               s16
declare     sca_old_z               s16
declare     super_matrix            Mat16
declare     super_vector            Vec16p
declare     push_cnt                u8
declare     free0                   u8
declare     free1                   u8
declare     free2                   u8
declare     sin_parts_ptr           u32
declare     parts                   PartsW

struct      DoorEntity
base        Entity
declare     sca_info                u32
declare     sca_hit_data            u32
declare     sca_old_x               s16
declare     sca_old_z               s16
declare     super_matrix            Mat16
declare     super_vector            Vec16p
declare     attribute_2             u8
declare     attribute_3             u8
declare     model_no                u16
declare     free0                   u16
declare     free2                   u16

struct      SceTask
declare     routine                 u8
declare     status                  u8
declare     sub_ctr                 u8
declare     task_level              u8
declare     ifel_ctr                u8[4]
declare     loop_ctr                u8[4]
declare     loop_if_class           u8[16]
declare     data                    u8*
declare     lstack                  s32[16]
declare     lbreak                  s32[16]
declare     lcnt                    s16[16]
declare     stack                   s32[32]
declare     sp                      u8**
declare     ret_addr                s32[4]
declare     work                    Entity*
declare     spd                     s16[3]
declare     dspd                    s16[3]
declare     aspd                    s16[3]
declare     adspd                   s16[3]
declare     r_no_bak                s32

struct      BgmTableEntry
declare     main                    u8
declare     sub0                    u8
declare     sub1                    u8

struct      RdtHeader
declare     num_sprites             u8
declare     num_cuts                u8
declare     num_models              u8
declare     num_items               u8
declare     num_doors               u8
declare     room_at                 u8
declare     reverb_lv               u8
declare     unknown7                u8

struct      Rdt
declare     header                  RdtHeader
declare     offsets                 void*[23]

struct      RdtCamera
declare     flags                   u16         0x00
declare     perspective             u16         0x02
declare     pos_x                   s32         0x04
declare     pos_y                   s32         0x08
declare     pos_z                   s32         0x0C
declare     target_x                s32         0x10
declare     target_y                s32         0x14
declare     target_z                s32         0x18
declare     offset                  u32         0x1C

struct      RdtModel
declare     texture_offset          u32         0x00
declare     model_offset            u32         0x04

struct      DoorInfo
declare     prepacket               void*
declare     tmd_adr                 TmdEntry*
declare     packettop               void*
declare     var_0C                  s32
declare     var_10                  s32
declare     var_14                  s32
declare     edh_offset              u32                     0x224
declare     vb_offset               u32
declare     ctr1                    u16
declare     ctr2                    u16
declare     v0                      Vec16p
declare     v1                      Vec16p
declare     v2                      Vec16p
declare     sound_flg               u16
declare     div_max                 u16

struct      DrMove
declare     tag                     u32
declare     code                    u32[5]

struct      PsxRect
declare     x                       s16
declare     y                       s16
declare     w                       s16
declare     h                       s16

struct      Tile
declare     tag                     u32
declare     r                       u8
declare     g                       u8
declare     b                       u8
declare     code                    u8
declare     psxRect                 PsxRect

struct      DrMode
declare     tag                     u32
declare     code                    u32[2]

struct      Fade
declare     kido                    s16
declare     add                     s16
declare     hrate                   u8
declare     mask_r                  u8
declare     mask_g                  u8
declare     mask_b                  u8
declare     pri                     u8
declare     dm00                    u8[3]
declare     tiles                   Tile[2]
declare     dr_modes                DrMode[2]
declare     psxRect                 PsxRect

struct      CCPartsWork
declare     cc_ctr                  u8
declare     cc_cnt                  u8
declare     cc_wait                 u8
declare     cc_num                  u8
declare     cc_pos_x                s16
declare     cc_pos_y                s16
declare     cc_dr_move              DrMove[2]
declare     cc_dr_rect              PsxRect[2]
declare     obj                     ObjectEntity*

struct      CCWork
declare     cc_parts                CCPartsWork[30]
declare     ccol_old                s16
declare     ccol_no                 u8
declare     ctex_old                u8

struct      EnemyInitEntry
declare     type                    u16
declare     enabled                 u16

struct      Input
declare     mapping                 u8[31]
declare     keyboard_raw_state      u32                     0x24
declare     var_1F8                 u32                     0x1F8
declare     gamepad_raw_state       u32                     0x1FC
declare     var_3D0                 u32                     0x3D0
declare     var_3B24                u32                     0x3B24
declare     keyboard                u32                     0x3B28

struct      DemoPlayer
declare     stage_no                u8
declare     room_no                 u8
declare     cut_no                  u8
declare     equip_id                u8
declare     equip_no                u8
declare     key_idx                 u8
declare     id                      u8
declare     pad                     u8
declare     inventory               InventorySlot[11]
declare     frames                  u16
declare     pos                     Vec16
declare     cdir_y                  s16
declare     input                   u16[900]

struct      Task
declare     status                  u16
declare     sleep                   u16
declare     fn                      void*
declare     var_08                  u8
declare     var_09                  u8
declare     var_0A                  u8
declare     var_0B                  u8
declare     var_0C                  u8
declare     var_0D                  u8
declare     var_0E                  u8
declare     var_0F                  u8
declare     var_10                  u8
declare     var_11                  u8
declare     var_12                  u8
declare     var_13                  u8
declare     var_14                  u32
declare     var_18                  u32
declare     var_1C                  u32
declare     var_20                  u32

struct      MapData
declare     u                       u8
declare     v                       u8
declare     w                       u8
declare     h                       u8
declare     c_pos_x                 s16
declare     c_pos_y                 s16
declare     b_pos_x                 s16
declare     b_pos_y                 s16
declare     flg                     u8
declare     change_flg              u8
declare     pl0_flg                 u8
declare     pl1_flg                 u8

struct      MapStageInfo
declare     data                    MapData*
declare     room_num                u8
declare     map                     u8
declare     file_no                 s16

struct      Unknown6949F8
declare     var_04                  u16                     0x04
declare     var_06                  u16                     0x06
declare     var_08                  u16                     0x08
declare     var_0A                  u16                     0x0A
declare     var_0C                  u8                      0x0C
declare     var_0E                  u8                      0x0E

struct      Prim
declare     pNext                   Prim*
declare     type                    s32

struct      PrimLine
base        Prim
declare     x0                      s16
declare     y0                      s16
declare     x1                      s16
declare     y1                      s16
declare     color0                  u32

struct      PrimLine2
base        PrimLine
declare     color1                  u32

struct      PrimSprite
base        Prim
declare     texture                 u32
declare     var_0C                  u32
declare     x0                      s16
declare     y0                      s16
declare     x1                      s16
declare     y1                      s16
declare     u0                      u8
declare     v0                      u8
declare     u1                      u8
declare     v1                      u8

struct      PrimScaler
base        Prim
declare     prj                     u32
declare     rgb0                    u32
declare     rgb1                    u32
declare     c_x                     u32
declare     c_y                     u32
declare     rate_x                  f32
declare     rate_y                  f32
declare     var_24                  u32
declare     var_28                  u32
declare     var_2C                  u32
declare     var_30                  u32

struct      MarniFont
declare     bitmap                  u32
declare     width                   u32
declare     height                  u32

struct      MarniRes
declare     width                   u32
declare     height                  u32
declare     depth                   u32
declare     fullscreen              u32

struct      MarniSurfaceDesc
declare     r_shift                 u8
declare     r_mask                  u8
declare     r_bitcnt                u8
declare     g_shift                 u8
declare     g_mask                  u8
declare     g_bitcnt                u8
declare     b_shift                 u8
declare     b_mask                  u8
declare     b_bitcnt                u8
declare     a_shift                 u8
declare     a_mask                  u8
declare     a_bitcnt                u8

struct      MarniSurface2
declare     vtbl                    void**
declare     pBitmap                 void*
declare     pPalette                void*
declare     bLocked                 u8
declare     bPalLocked              u8
declare     desc                    MarniSurfaceDesc
declare     width                   s16
declare     height                  s16
declare     pitch                   s16
declare     pal_cnt                 s16
declare     var_22                  s16
declare     bpp                     u8
declare     var_25                  u8
declare     bOpen                   u8
declare     var_27                  u8
declare     var_28                  u8
declare     var_29                  u8
declare     var_2A                  u8
declare     var_2B                  u8
declare     var_2C                  u8
declare     var_2D                  u8
declare     var_2E                  s16

struct      MarniSurface3
base        MarniSurface2
declare     pDDsurface              void*
declare     pDDpalette              void**

struct      MarniSurface
base        MarniSurface3
declare     is_vmem                 u32

struct      MarniSurfaceX
base        MarniSurface
declare     texture_handle          u32
declare     pDDtexture              void*

struct      MarniSurfaceY
base        MarniSurface
declare     texture_handle          u32
declare     pDDtexture              void*

struct      MarniMovie
declare     flag                    u32                     0x94
declare     pos                     f64
declare     var_A0                  s32
declare     var_A4                  s32

struct      MarniOt
declare     zdepth                  s32
declare     pHead                   Prim*
declare     is_valid                s32
declare     pCurrent                Prim*
declare     var_10                  u8
declare     var_11                  u8
declare     var_12                  u8
declare     var_13                  u8

struct      MarniLineRecord
declare     gourad                  void*
declare     flat                    void*

struct      WindowRect
declare     left                    s32
declare     top                     s32
declare     right                   s32
declare     bottom                  s32

struct      MarniTextureNode
declare     next                    u16
declare     surface                 MarniSurfaceX*          0x08
declare     var_14                  u32                     0x14

struct      MarniTexture
declare     var_00                  u32
declare     surface                 MarniSurface2
declare     head                    u16                     0x34
declare     var_36                  u16                     0x36

struct      MarniVertex
declare     pad_00                  u8[32]

struct      MarniDrawOp
declare     vertices                MarniVertex[3]
declare     average_z               f32                     0x60
declare     filter                  u8                      0x64
declare     var_68                  u32                     0x68
declare     src_blend               u32                     0x6C
declare     dst_blend               u32                     0x70
declare     texture_handle          u32                     0x74
declare     shade_mode              u32                     0x78
declare     cull_mode               u32                     0x7C
declare     z_func                  u32                     0x80
declare     z_write_enable          u8                      0x84
declare     specular_enable         u8                      0x85
declare     pad_86                  u8[2]                   0x86

struct      PolygonObject
declare     vtbl                    void**
declare     var_54                  u32                     0x54

struct      Unknown8C76A0
declare     surface                 MarniSurface3*          0x08

struct      MarniLight
declare     var_0C                  u32                     0x0C
declare     var_10                  u32                     0x10
declare     var_14                  f32                     0x14
declare     var_18                  f32                     0x18
declare     var_1C                  f32                     0x1C
declare     var_20                  f32                     0x20
declare     var_2C                  u32                     0x2C

struct      Marni
declare     texture_nodes           MarniTextureNode[256]
declare     textures                MarniTexture[256]       0x1800
declare     field_5000              u32                     0x5000
declare     field_5004              u32                     0x5004
declare     field_5008              u32                     0x5008
declare     field_5010              MarniLineRecord[8]      0x5010
declare     field_700C              s32                     0x700C
declare     draw_ops                MarniDrawOp[65536]      0x7010
declare     draw_op_ptrs            MarniDrawOp*[65536]     0x00887010
declare     num_draw_ops            s32                     0x008C7010
declare     cutscene_bars           u8                      0x008C7014
declare     modes                   u32                     0x008C7018
declare     field_8C701C            f32                     0x008C701C
declare     field_8C7020            u32                     0x008C7020
declare     otag                    MarniOt[5]              0x008C7024
declare     field_8C7088            u8[252]                 0x008C7088
declare     field_8C7184            u8[252]                 0x008C7184
declare     dwVidMemTotal           u32                     0x008C7280
declare     field_8C728C            u32[256]                0x008C728C
declare     polygons                PolygonObject**         0x008C7698
declare     polygons_count          u32                     0x008C769C
declare     var_8C76A0              Unknown8C76A0*[128]     0x008C76A0
declare     window_rect             WindowRect              0x008C7CDC
declare     pClipper                void*                   0x008C7CEC
declare     lights                  MarniLight[6]           0x008C7CF0
declare     field_8C7E10            u32                     0x008C7E10
declare     field_8C7E14            u32                     0x008C7E14
declare     field_8C7E18            f32                     0x008C7E18
declare     field_8C7E1C            u32                     0x008C7E1C
declare     field_8C7E20            u32                     0x008C7E20
declare     field_8C7E24            u32                     0x008C7E24
declare     field_8C7E28            f32                     0x008C7E28
declare     field_8C7E2C            u32                     0x008C7E2C
declare     field_8C7E30            u32                     0x008C7E30
declare     field_8C7E34            u32                     0x008C7E34
declare     field_8C7E38            f32                     0x008C7E38
declare     field_8C7E3C            u32                     0x008C7E3C
declare     field_8C7E40            u32                     0x008C7E40
declare     field_8C7E44            u32                     0x008C7E44
declare     field_8C7E48            u32                     0x008C7E48
declare     field_8C7E4C            u32                     0x008C7E4C
declare     field_8C7E50            f32                     0x008C7E50
declare     field_8C7E54            f32                     0x008C7E54
declare     field_8C7E58            f32                     0x008C7E58
declare     field_8C7E5C            u32                     0x008C7E5C
declare     field_8C7E60            f32                     0x008C7E60
declare     field_8C7E64            f32                     0x008C7E64
declare     field_8C7E68            f32                     0x008C7E68
declare     field_8C7E6C            u32                     0x008C7E6C
declare     field_8C7E70            f32                     0x008C7E70
declare     field_8C7E74            f32                     0x008C7E74
declare     field_8C7E78            f32                     0x008C7E78
declare     field_8C7E7C            u32                     0x008C7E7C
declare     field_8C7E80            u32                     0x008C7E80
declare     field_8C7E84            u32                     0x008C7E84
declare     field_8C7E88            u32                     0x008C7E88
declare     field_8C7E8C            u32                     0x008C7E8C
declare     field_8C7E90            u32                     0x008C7E90
declare     pMaterial               void*                   0x008C7E94
declare     MaterialHandle          u32                     0x008C7E98
declare     pDirect3D2              void*                   0x008C7E9C
declare     pDirectDevice2          void*                   0x008C7EA0
declare     pViewport               void*                   0x008C7EA4
declare     hWnd                    void*                   0x008C7EA8
declare     render_w                s32                     0x008C7EAC
declare     render_h                s32                     0x008C7EB0
declare     xsize_old               s32                     0x008C7EB4
declare     ysize_old               s32                     0x008C7EB8
declare     bpp_old                 s32                     0x008C7EBC
declare     fullscreen_old          s32                     0x008C7EC0
declare     field_8C7EC4            s32                     0x008C7EC4
declare     field_8C7EC8            s32                     0x008C7EC8
declare     aspect_x                f32                     0x008C7ED4
declare     aspect_y                f32                     0x008C7ED8
declare     field_8C7EDC            u32                     0x008C7EDC
declare     var_8C7EE0              s32                     0x008C7EE0
declare     var_8C7EE4              s32                     0x008C7EE4
declare     is_gpu_busy             s32                     0x008C7EE8
declare     desktop_w               s32                     0x008C7EEC
declare     desktop_h               s32                     0x008C7EF0
declare     desktop_bpp             s32                     0x008C7EF4
declare     resolutions             MarniRes[64]            0x008C7EF8
declare     res_count               s32                     0x008C82F8
declare     field_8C82FC            s32                     0x008C82FC
declare     field_8C8300            s32                     0x008C8300
declare     var_8C8318              s32                     0x008C8318
declare     ambient_b               u8                      0x008C831C
declare     ambient_g               u8                      0x008C831D
declare     ambient_r               u8                      0x008C831E
declare     ambient_a               u8                      0x008C831F
declare     pDirectDraw             void*                   0x008C8320
declare     pDirectDraw2            void*                   0x008C8324
declare     pMovie                  MarniMovie*             0x008C8328
declare     xsize                   s32                     0x008C832C
declare     ysize                   s32                     0x008C8330
declare     bpp                     s32                     0x008C8334
declare     is_gpu_active           s32                     0x008C8338
declare     dwVidMemFree            s32                     0x008C833C
declare     surface0                MarniSurface            0x008C8340
declare     surfaceZ                MarniSurface            0x008C837C
declare     surface2                MarniSurface            0x008C83B8
declare     gpu_flag                u32                     0x008C83F4
declare     vertices_processed      u32                     0x008C83F8
declare     triangles_drawn         u32                     0x008C83FC
declare     field_8C8410            u32                     0x008C8410
declare     field_8C8414            u32                     0x008C8414
declare     field_8C8418            u32                     0x008C8418
declare     field_8C841C            u32                     0x008C841C
declare     field_8C8420            u32                     0x008C8420
declare     field_8C8424            f32                     0x008C8424
declare     field_8C8428            u32                     0x008C8428
declare     device_cnt              s32                     0x008C842C
declare     field_8C8430            s32                     0x008C8430
declare     surface3                MarniSurface            0x008C8434

struct      OldStdString
declare     data                    char*
declare     length                  u32

struct      MarniConfig
declare     key                     u32
declare     var_04                  u32
declare     var_08                  u32
declare     hKey                    u32
declare     ex_flag                 u32
declare     ex_time                 u32[3]
declare     var_20                  u32
declare     var_24                  u32
declare     var_28                  u32
declare     var_2C                  u32
declare     var_30                  u32
declare     var_34                  u32
declare     data1                   u32
declare     data2                   u32
declare     data3                   u32
declare     data4                   u32
declare     perswrap                u8
declare     bilinear                u8
declare     fadeflag                u8
declare     var_4B                  u8
declare     device_name             OldStdString
declare     display_mode            OldStdString
declare     var_5C                  u8

struct      D3DDeviceInfo
declare     lpDeviceName            char[30]
declare     lpDeviceDescription     char[50]
declare     desc                    u8[252]
declare     GUID                    u8[16]
declare     hwAccelerated           u32
declare     supportsFloat           u32
declare     supportsZbuffer         u32
declare     hwAccelerated2          u32

struct      TexturePage
declare     handle                  u32
declare     var_04                  u32
declare     var_08                  u32

struct      GameTable
declare     cheat0                  u8                      0x00524EB4
declare     cheat1                  u8                      0x00524EB5
declare     enable_dsound           bool                    0x00524EB6
declare     graphics_ptr_data       u8                      0x00524EB9
declare     mutex_name              char*                   0x00525138
declare     door_ll                 Mat16                   0x00525F5C
declare     door_lc                 Mat16                   0x00525F7C
declare     global_prj              s32                     0x00526268
declare     math_const_table        s16[1224]               0x00526270
declare     byte_5286F4             u8[8]                   0x005286F4
declare     byte_528724             u8[4]                   0x00528724
declare     pGG                     void*                   0x0052C4B0
declare     g_identity_mat          Mat16                   0x0052D880
declare     curtain2                u8[7]                   0x0052D8E0
declare     byte_52D8E7             u8[25]                  0x0052D8E7
declare     byte_53A305             u8[63]                  0x0053A305
declare     flag_groups             u32*[35]                0x0053B218
declare     byte_53C5D8             BgmTableEntry[146]      0x0053C5D8
declare     byte_53C78F             u8[70]                  0x0053C78F
declare     common_file_map_a       char[21]                0x0053DA58
declare     byte_53DB74             u8*                     0x0053DB74
declare     item_def_tbl            ItemTypeDefinition[64]  0x0053DE28
declare     word_53E1AC             u16                     0x0053E1AC
declare     word_53E1B0             u16                     0x0053E1B0
declare     map_info0               MapStageInfo[20]        0x0053EAF8
declare     map_info1               MapStageInfo[20]        0x0053EB98
declare     byte_540780             u8[16]                  0x00540780
declare     dword_543A14            void*                   0x00543A14
declare     error                   u32                     0x00543A18
declare     d3d_devices             D3DDeviceInfo[5]        0x00543A20
declare     dword_54413C            s32                     0x0054413C
declare     d3d_vertices_processed  u32                     0x00544140
declare     d3d_triangles_drawn     u32                     0x00544144
declare     unk_544148              u8[1050736]             0x00544148
declare     d3d_device_count        s32                     0x006449B8
declare     dword_6449BC            s32                     0x006449BC
declare     hFont                   void*                   0x00669AF4
declare     is_480p                 u8                      0x00669AFC
declare     dword_66D394            u32                     0x0066D394
declare     texture_pages           TexturePage[41]         0x0067C7D8
declare     global_cx               u32                     0x0067C9C4
declare     global_cy               u32                     0x0067C9C8
declare     file_buffer             void*                   0x0067C9D0
declare     timer_r0                u8                      0x0067C9E4
declare     timer_last              u32                     0x0067C9F4
declare     vk_press                u8                      0x0067C9F8
declare     scaler                  PrimScaler              0x0067C9FC
declare     input                   Input                   0x0067CA30
declare     timer_10                u32                     0x0068055C
declare     marni_font              MarniFont               0x00680560
declare     hwnd                    void*                   0x0068056C
declare     timer_current           u32                     0x00680570
declare     hInstance               void*                   0x00680578
declare     error_no                u32                     0x00680580
declare     vsync_rate              u8                      0x00680584
declare     timer_r1                u8                      0x00680585
declare     timer_r2                u8                      0x00680586
declare     timer_frame             u8                      0x00680587
declare     game_seconds            u32                     0x00680588
declare     frame_current           u8                      0x0068058C
declare     can_draw                u8                      0x0068058D
declare     movie_r0                u8                      0x0068058E
declare     reset_r0                u8                      0x0068058F
declare     byte_680590             u8                      0x00680590
declare     byte_680591             u8                      0x00680591
declare     byte_680592             u8                      0x00680592
declare     byte_680593             u8                      0x00680593
declare     byte_680597             u8                      0x00680597
declare     byte_680598             u8                      0x00680598
declare     ushinabe                u8                      0x00680599
declare     blood_censor            u8                      0x0068059A
declare     byte_68059B             u8                      0x0068059B
declare     super_hard_switch       u8                      0x006805B0
declare     hard_mode               u8                      0x006805B1
declare     censorship_off          u8                      0x006805B3
declare     byte_6805B4             u8                      0x006805B4
declare     exit_game               u8                      0x006805B5
declare     pMarni                  Marni*                  0x006805B8
declare     global_rgb              u32                     0x006805BC
declare     movie_idx               u32                     0x006805C0
declare     hMutex                  void*                   0x006805C8
declare     dword_6893F0            u32                     0x006893F0
declare     door_state              u32                     0x006893F4
declare     door                    DoorInfo*               0x00689400
declare     dword_689440            u32                     0x00689440
declare     dword_689444            u32                     0x00689444
declare     dword_689448            u32                     0x00689448
declare     idd                     u32                     0x00689790
declare     dword_689800            u32                     0x00689800
declare     stage_bk                u8                      0x00689849
declare     byte_68984A             u8                      0x0068984A
declare     systemInitialized       u32                     0x0068984C
declare     byte_689ABC             u8                      0x00689ABC
declare     dword_689BDC            u32                     0x00689BDC
declare     rdt_count               u32                     0x00689C10
declare     rdt_top_ptr             void*                   0x00689C14
declare     rdt_size                u32                     0x00689C18
declare     dword_689C1C            u32                     0x00689C1C
declare     room_path               char[32]                0x00689C20
declare     stage_font_name         char[32]                0x00689C40
declare     p_em                    PlayerEntity*           0x00689C60
declare     byte_689C64             u8                      0x00689C64
declare     itembox_speed           s16                     0x00689C90
declare     itembox_acceleration    s16                     0x00689C98
declare     dword_689CA0            u32                     0x00689CA0
declare     itembox_obj             ObjectEntity*           0x00689CA8
declare     dword_689DF4            u32                     0x00689DF4
declare     dword_689DF8            u32                     0x00689DF8
declare     st_code_pos             u32                     0x00689EAC
declare     dword_689F20            u32                     0x00689F20
declare     byte_689F24             u8                      0x00689F24
declare     task_disable            u32                     0x00689F2C
declare     task_no                 u32                     0x00689F30
declare     marni_config            MarniConfig             0x00689F50
declare     ctcb                    Task*                   0x0068A204
declare     tasks                   Task[8]                 0x0068A220
declare     title_mv_state          u8                      0x00691B80
declare     title_disp_add          u8                      0x00691B81
declare     byte_691B82             u8                      0x00691B82
declare     byte_691B83             u8                      0x00691B83
declare     byte_691B85             u8                      0x00691B85
declare     title_mode              u8                      0x00691B86
declare     title_cursor            u8                      0x00691B87
declare     byte_691B88             u8                      0x00691B88
declare     byte_691B89             u8                      0x00691B89
declare     byte_691B8D             u8                      0x00691B8D
declare     byte_691B8E             u8                      0x00691B8E
declare     demo_countdown          u16                     0x00691B90
declare     ti_kido                 s16                     0x00691B92
declare     ti_add                  s16                     0x00691B94
declare     word_691B96             s16                     0x00691B96
declare     word_691B98             s16                     0x00691B98
declare     dword_691B9C            s32                     0x00691B9C
declare     word_691D78             s16                     0x00691D78
declare     word_691D7A             s16                     0x00691D7A
declare     word_691D8E             s16                     0x00691D8E
declare     word_691DA2             s16                     0x00691DA2
declare     byte_691EF3             u8                      0x00691EF3
declare     _st                     u8                      0x00691F61
declare     itembox_state           u8                      0x00691F62
declare     byte_691F63             u8                      0x00691F63
declare     byte_691F64             u8                      0x00691F64
declare     byte_691F65             u8                      0x00691F65
declare     byte_691F66             u8                      0x00691F66
declare     byte_691F67             u8                      0x00691F67
declare     byte_691F68             u8                      0x00691F68
declare     byte_691F69             u8                      0x00691F69
declare     byte_691F6A             u8                      0x00691F6A
declare     inventory_cursor        u8                      0x00691F6C
declare     inventory_cursor_2      u8                      0x00691F6D
declare     inventory_cursor_3      u8                      0x00691F6E
declare     byte_691F6F             u8                      0x00691F6F
declare     hud_mode                u8                      0x00691F70
declare     byte_691F74             u8                      0x00691F74
declare     byte_691F76             u8                      0x00691F76
declare     byte_691F7A             u8                      0x00691F7A
declare     byte_691F7B             u8                      0x00691F7B
declare     byte_691F7C             u8                      0x00691F7C
declare     byte_691F7D             u8                      0x00691F7D
declare     byte_691F7E             u8                      0x00691F7E
declare     byte_691F7F             u8                      0x00691F7F
declare     byte_691F80             u8                      0x00691F80
declare     byte_691F81             u8                      0x00691F81
declare     byte_691F82             u8                      0x00691F82
declare     byte_691F83             u8                      0x00691F83
declare     itembox_slot_id         u8                      0x00691F84
declare     byte_691F85             u8                      0x00691F85
declare     byte_691F86             u8                      0x00691F86
declare     byte_691F87             u8                      0x00691F87
declare     dword_691F88            u32                     0x00691F88
declare     word_691F94             u16                     0x00691F94
declare     word_691F9A             u16                     0x00691F9A
declare     dword_691F9C            u32                     0x00691F9C
declare     word_691FA6             u16                     0x00691FA6
declare     word_691FA8             s16                     0x00691FA8
declare     word_691FB0             u16                     0x00691FB0
declare     word_691FB2             u16                     0x00691FB2
declare     word_691FB8             u16                     0x00691FB8
declare     word_691FBA             u16                     0x00691FBA
declare     byte_692D64             u8                      0x00692D64
declare     word_692FBE             u16                     0x00692FBE
declare     word_692FC0             u16                     0x00692FC0
declare     vab_id                  u8[16]                  0x00692FF5
declare     dword_6934B4            u8*                     0x006934B4
declare     ss_name_bgm             char[260]               0x006934E0
declare     seq_ctr                 s8[3]                   0x00693800
declare     dword_693804            u32                     0x00693804
declare     byte_693808             u8                      0x00693808
declare     byte_69380A             s8                      0x0069380A
declare     byte_693810             u8                      0x00693810
declare     byte_693812             u8                      0x00693812
declare     dword_693C4C            u32                     0x00693C4C
declare     current_bgm_address     u8*                     0x00693E84
declare     cd_vol_0                u32                     0x00693E88
declare     ss_name_sbgm            char[260]               0x00693EA0
declare     byte_693FA4             u8                      0x00693FA4
declare     word_6949F0             u16                     0x006949F0
declare     word_6949F4             u16                     0x006949F4
declare     dword_6949F8            Unknown6949F8*          0x006949F8
declare     random_base             u32                     0x00695E58
declare     scd                     u8*                     0x00695E5C
declare     c_em                    Entity*                 0x00695E60
declare     mizu_div                u32                     0x00695E64
declare     sce_type                u8                      0x00695E68
declare     cut_old                 u8                      0x00695E69
declare     c_id                    u8                      0x00695E6A
declare     c_model_type            u8                      0x00695E6B
declare     c_kind                  u8                      0x00695E6C
declare     mizu_div_max            u8                      0x00695E6D
declare     mizu_div_ctr            u8                      0x00695E6E
declare     rbj_reset_flg           u8                      0x00695E6F
declare     se_tmp0                 u8                      0x00695E70
declare     byte_695E71             u8                      0x00695E71
declare     byte_695E72             u8                      0x00695E72
declare     dword_695E7C            u32                     0x00695E7C
declare     psp_lookup              u8*                     0x00698840
declare     osp_mask_flag           u8                      0x006998C0
declare     byte_6D730C             u8[24592]               0x006D730C
declare     bg_buffer               u8*                     0x008C1880
declare     tmd                     TmdEntry*               0x008C6880
declare     door_tim                void*                   0x008C6884
declare     byte_8C6888             u8[1928]                0x008C6888
declare     door_info               DoorInfo                0x008E2880
declare     door_data               DoorEntity[10]          0x008E2ACC
declare     work_buffer             u8[163840]              0x008FF8A0
declare     work_buffer_2           u8[329712]              0x009278A0
declare     cc_work                 CCWork                  0x00980B00
declare     door_trans_mv           u8                      0x0098149E
declare     byte_981FB7             u8                      0x00981FB7
declare     byte_981FBB             u8                      0x00981FBB
declare     fg_message              s8                      0x0098504C
declare     pickup_item_type        u8                      0x0098504F
declare     g_table                 u8*                     0x009864E0
declare     dword_986520            u32                     0x00986520
declare     byte_986524             u8*                     0x00986524
declare     dword_988524            u32                     0x00988524
declare     byte_988528             u8*                     0x00988528
declare     dword_9885A8            u32                     0x009885A8
declare     dword_9885F8            u32                     0x009885F8
declare     word_9885FC             u16                     0x009885FC
declare     dword_9885FE            u32                     0x009885FE
declare     g_key                   u32                     0x00988604
declare     key_trg                 u32                     0x00988608
declare     dword_988610            u32                     0x00988610
declare     rdt                     Rdt*                    0x0098861C
declare     dword_988620            u32                     0x00988620
declare     mem_top                 void*                   0x00988624
declare     actor_entity            ActorEntity*            0x00988628
declare     dword_98862C            void*                   0x0098862C
declare     vcut_data               VCut*[2]                0x00988630
declare     em_damage_table_16      void*[48]               0x00988638
declare     em_die_table            void*[81]               0x009886F8
declare     dword_98883C            u16*                    0x0098883C
declare     door_aot_data           void*                   0x00988848
declare     aot_table               void*[32]               0x00988850
declare     dword_9888D0            Unknown6949F8*          0x009888D0
declare     byte_9888D8             u8                      0x009888D8
declare     byte_9888D9             u8                      0x009888D9
declare     fg_rbj_set              u8                      0x00989E68
declare     fg_system               u32                     0x00989E6C
declare     byte_989E75             u8                      0x00989E75
declare     word_989E76             u16                     0x00989E76
declare     word_989E78             u16                     0x00989E78
declare     word_989E7A             u16                     0x00989E7A
declare     byte_989E7D             u8                      0x00989E7D
declare     byte_989E7E             u8                      0x00989E7E
declare     byte_989E90             u8                      0x00989E90
declare     byte_989E91             u8                      0x00989E91
declare     dword_989E94            u32                     0x00989E94
declare     word_989EB4             u16                     0x00989EB4
declare     fg_status               u32                     0x00989ED0
declare     fg_stop                 u32                     0x00989ED4
declare     fg_use                  u32                     0x00989ED8
declare     dword_989EDC            u32                     0x00989EDC
declare     dword_989EE0            u32                     0x00989EE0
declare     dword_989EE4            u32                     0x00989EE4
declare     word_989EE8             s16                     0x00989EE8
declare     byte_989EEA             u8                      0x00989EEA
declare     enemy_count             u8                      0x00989EEB
declare     fg_room_enemy           u16                     0x00989EEC
declare     word_989EEE             u16                     0x00989EEE
declare     pl                      PlayerEntity            0x00989EF0
declare     poison_status           u16                     0x0098A108
declare     poison_timer            u8                      0x0098A10A
declare     player_work             PlayerEntity*           0x0098A10C
declare     splayer_work            EnemyEntity*            0x0098A110
declare     enemies                 EnemyEntity*[16]        0x0098A114
declare     enemy_init_map          void*[96]               0x0098A154
declare     enemy_init_table        void*[192]              0x0098A2D4
declare     enemy_init_entries      EnemyInitEntry[2]       0x0098A614
declare     pOm                     ObjectEntity[32]        0x0098A61C
declare     obj_ptr                 ObjectEntity*           0x0098E51C
declare     aot_count               u8                      0x0098E528
declare     pickup_item             u8                      0x0098E529
declare     itembox_obj_index       u8                      0x0098E533
declare     byte_98E541             u8                      0x0098E541
declare     question_state          u8                      0x0098E542
declare     dword_98E544            u32                     0x0098E544
declare     word_98E78C             s16                     0x0098E78C
declare     dword_98E790            u32                     0x0098E790
declare     action_fn               void*                   0x0098E794
declare     byte_98E798             u8                      0x0098E798
declare     table_start             u8                      0x0098E79C
declare     dword_98E99C            u32                     0x0098E99C
declare     inventory_size          u8                      0x0098E9A4
declare     byte_98E9A5             u8                      0x0098E9A5
declare     byte_98E9A6             u8                      0x0098E9A6
declare     byte_98E9A7             u8                      0x0098E9A7
declare     byte_98E9AA             u8                      0x0098E9AA
declare     byte_98E9AB             u8                      0x0098E9AB
declare     word_98E9AC             s16                     0x0098E9AC
declare     word_98E9B6             s16                     0x0098E9B6
declare     word_98E9BC             s16                     0x0098E9BC
declare     word_98E9BE             s16                     0x0098E9BE
declare     word_98E9C0             s16                     0x0098E9C0
declare     word_98E9C2             s16                     0x0098E9C2
declare     dword_98E9C4            u32                     0x0098E9C4
declare     bgm_table               u16[142]                0x0098E9C8
declare     scd_variables_00        u16                     0x0098EAE4
declare     word_98EAE6             u16                     0x0098EAE6
declare     last_used_item          u16                     0x0098EAE8
declare     word_98EAEA             s16                     0x0098EAEA
declare     word_98EAFC             s16                     0x0098EAFC
declare     word_98EAFE             s16                     0x0098EAFE
declare     word_98EB00             s16                     0x0098EB00
declare     scd_var_temp            u16                     0x0098EB02
declare     current_stage           u16                     0x0098EB14
declare     current_room            u16                     0x0098EB16
declare     current_cut             u16                     0x0098EB18
declare     last_cut                u16                     0x0098EB1A
declare     word_98EB1C             u16                     0x0098EB1C
declare     rng                     u16                     0x0098EB1E
declare     word_98EB20             u16                     0x0098EB20
declare     ex_battle_mode          u16                     0x0098EB22
declare     next_pld                s16                     0x0098EB24
declare     word_98EB26             u16                     0x0098EB26
declare     word_98EB28             u16                     0x0098EB28
declare     word_98EB2A             u16                     0x0098EB2A
declare     fg_scenario             u32[8]                  0x0098EB2C
declare     fg_common               u32[8]                  0x0098EB4C
declare     fg_room                 u32                     0x0098EB6C
declare     fg_tick                 u32                     0x0098EB70
declare     fg_enemy_0              u32[8]                  0x0098EB74
declare     fg_enemy_1              u32[8]                  0x0098EB94
declare     fg_item                 u32[7]                  0x0098EBB4
declare     dword_98EBD0            u32                     0x0098EBD0
declare     dword_98EC00            u32                     0x0098EC00
declare     fg_map                  u32[5]                  0x0098EC04
declare     pri_be_flg              u32[64]                 0x0098EC20
declare     door_locks              u32                     0x0098ED2C
declare     item_twork              InventorySlot           0x0098ED30
declare     inventory               InventorySlot[11]       0x0098ED34
declare     itembox                 ItemboxItem[64]         0x0098ED60
declare     inventory_files         u8[24]                  0x0098EE60
declare     word_98EE78             s16                     0x0098EE78
declare     byte_98EE7B             u8                      0x0098EE7B
declare     saved_splayer_health    s16                     0x0098EE7C
declare     word_98EE7E             u16                     0x0098EE7E
declare     dword_98EEF0            u32                     0x0098EEF0
declare     byte_98EF2C             u8                      0x0098EF2C
declare     byte_98EF2D             u8                      0x0098EF2D
declare     main                    u8*                     0x0098EF40
declare     dword_98F070            u32                     0x0098F070
declare     dword_98F074            u32                     0x0098F074
declare     word_98F078             u16                     0x0098F078
declare     byte_98F07A             u8                      0x0098F07A
declare     byte_98F07B             u8                      0x0098F07B
declare     fade_table              Fade[4]                 0x0098F07C
declare     byte_98F1B6             u8                      0x0098F1B6
declare     byte_98F1B7             u8                      0x0098F1B7
declare     byte_98F1B8             u8                      0x0098F1B8
declare     byte_98F1B9             u8                      0x0098F1B9
declare     pause                   u8                      0x0098F1BA
declare     byte_98F1BB             u8                      0x0098F1BB
declare     byte_98F98F             u8[4]                   0x0098F98F
declare     byte_991F80             u8                      0x00991F80
declare     dword_991FC4            u32                     0x00991FC4
declare     pdemo                   DemoPlayer              0x00991FC8
declare     byte_99270E             u8                      0x0099270E
declare     byte_99270F             u8                      0x0099270F
declare     ll_matrix               Mat16                   0x0099CE40
declare     lc_matrix               Mat16                   0x0099CE60
declare     rc_matrix               Mat16                   0x0099CE80
declare     doors                   DoorEntity*[9]          0x0099CEA0
declare     dword_99CEC4            u32                     0x0099CEC4
declare     dword_99CF64            u32                     0x0099CF64
declare     dword_99CF6C            u32                     0x0099CF6C
declare     dword_99CF70            u32                     0x0099CF70

struct      Unknown988628
declare     var_10C                 u16                     0x10C

struct      HudInfo
declare     routine                 u8
declare     var_01                  u8
declare     var_0C                  u8
declare     var_24                  u8
declare     var_25                  u8
